API_BASE = '';
API_KEY = ''
//del treejs 

function getData() {
    fetch(API_URL, {
        method: 'GET',
        headers: {
            'Accept': 'application/json',
        },
    })
        .then(response => response.json())
        .then(response => console.log(JSON.stringify(response)))
    console.log("hi");
}



function findDate() {
    document.getElementById("loading").style.display = "block";
    let inici = document.getElementById("start-date").value;
    //let query = `${API_BASE}/neo/rest/v1/feed?start_date=2015-09-07&end_date=2015-09-08&api_key=yns2Tz49qdSIKPohDnbeNoeRfCIrqRtt5smy1cnM`;
    let query = `${API_BASE}/neo/rest/v1/feed?start_date=${inici}&end_date=${inici}&api_key=${API_KEY}`;
    console.log(query);
    fetch(query, {
        method: 'GET',
        headers: {
            'Accept': 'application/json',
        },
    })
        .then(response => response.json())
        .then(response => listAsteroids(response, inici))

}

let muchotexto = null;
//Coding a 3D Solar System with JavaScript + Three.js  https://www.youtube.com/watch?v=KOSMzSyiEiA
function listAsteroids(asteroid, date) {
    document.getElementById("loading").style.display = "none";
    let pare = document.getElementById("meteoritos");
    pare.innerHTML = "";
    muchotexto = asteroid["near_earth_objects"][date];
    // console.log("soy ese", muchotexto);

    for (let i = 0; i < muchotexto.length; i++) {
        pare.innerHTML += drawMeteroid(muchotexto[i]);
    }
}

function drawMeteroid(obj) {
    console.log(obj.name);
    console.log(obj.estimated_diameter.meters.estimated_diameter_min);
    console.log(obj.close_approach_data[0].epoch_date_close_approach); //close_approach_date_full
    return `
    <!-- autogenerated from 'drawMeteroid()'-->
    <div class="meteoroid">
        <div class="text-center">${obj.name}</div>
        <div class="image-meteoroid"></div>
        <div class="text-center">${obj.estimated_diameter.meters.estimated_diameter_min}</div>
    </div>`
}



//https://api.nasa.gov/neo/rest/v1/feed?start_date=2015-09-07&end_date=2015-09-08&api_key=DEMO_KEY

let camera, scene, renderer;
//Tamany del canas
let cvSize = { "height": 400, "width": 400 }

//Vigila la camara
camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 1000);
camera.position.z = 300;
camera.position.x = 0;
camera.position.y = 0;

camera.aspect = 1;
camera.updateProjectionMatrix();
scene = new THREE.Scene();

//Esto es un planeta
function createMeshPlanet(size, wSegments, hSegments, textureMap) {
    const geometry = new THREE.SphereGeometry(size, wSegments, hSegments);
    const material = new THREE.MeshBasicMaterial({ map: new THREE.TextureLoader().load(textureMap) });
    return new THREE.Mesh(geometry, material);
}

let mesh = createMeshPlanet(20, 30, 30, 'textures/stone.png');
let mesh2 = createMeshPlanet(20, 30, 30, 'textures/earth.png');
mesh.position.y = 50
mesh.position.x = -20

//Afegeix el planeta
scene.add(mesh);


scene.add(mesh2);

renderer = new THREE.WebGLRenderer({ alpha: true });
renderer.setPixelRatio(1);
renderer.setSize(cvSize.width, cvSize.height,);
document.getElementById("escenario").appendChild(renderer.domElement);
//window.addEventListener('resize', onWindowResize(renderer,camera));

animate();


function onWindowResize(renderer, camera) {
    camera.aspect = 1;
    camera.updateProjectionMatrix();
    renderer.setSize(300, 300);
}


function move(nmesh) {
    //console.log(nmesh.position);
    nmesh.position.x += 0.05;
    return nmesh
}

function animate() {
    requestAnimationFrame(animate);
    mesh.rotation.x += 0.05;
    mesh.rotation.y += 0.05;
    mesh2.rotation.x += 0.05;
    mesh2.rotation.y += 0.05;
    mesh = move(mesh);

    renderer.render(scene, camera);
}

function moveCamera(x, y, z) {
    camera.position.x += x;
    camera.position.y += y;
    camera.position.z += z;

    console.log("Camera", camera.position);
}